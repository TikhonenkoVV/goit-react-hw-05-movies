{"version":3,"file":"static/js/289.725d7c4f.chunk.js","mappings":"gMAEaA,E,QAAWC,EAAAA,IAAH,sO,SCCRC,EAAS,WAClB,OACI,SAACF,EAAD,WACI,SAAC,KAAD,CACIG,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CACVC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEfC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,MAIjC,C,wHCvBYC,EAAchB,EAAAA,EAAAA,GAAH,mEACX,qBAAGiB,MAAkBC,OAAOC,KAA5B,IAIAC,EAAapB,EAAAA,EAAAA,GAAH,wEAEC,qBAAGiB,MAAkBC,OAAOG,MAA5B,IAGXC,EAAatB,EAAAA,EAAAA,GAAH,wGACV,qBAAGiB,MAAkBC,OAAOC,KAA5B,IAMAI,EAAavB,EAAAA,EAAAA,GAAH,kDAIVwB,EAAYxB,EAAAA,EAAAA,EAAH,sB,iDCVTyB,EAAS,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACDT,IACLI,GAAa,IACbM,EAAAA,EAAAA,IAAiBV,EAAS,YACrBW,MAAK,SAAAC,GACFJ,EAAWI,EAAKC,QACnB,IACAC,OAAM,SAAAC,GACHT,EAASS,EAAIC,UACbC,EAAAA,EAAAA,IAAMF,EAAIC,QACb,IACAE,SAAQ,WACLd,GAAa,EAChB,IACR,GAAE,CAACJ,KAGA,gCACKG,IAAa,SAAC5B,EAAA,EAAD,IACbgC,EAAQY,OAAS,IACd,iCACI,SAAC7B,EAAD,uBACA,SAACI,EAAD,iBACKa,QADL,IACKA,OADL,EACKA,EAASa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAAC3B,EAAD,YACI,UAACC,EAAD,sBAAqByB,MACrB,SAACxB,EAAD,UAAYyB,MAFCF,EADP,SASzBd,EAAQY,OAAS,IACd,SAAC7B,EAAD,gDAEHe,IAAS,SAAC,KAAD,MAGrB,C,mJCvDDmB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAU,mCAAG,sGACCF,EAAAA,EAAAA,IAAA,qCAAwCC,IADzC,uBACdb,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,qDAKVe,EAAgB,mCAAG,WAAOC,EAAGC,GAAV,yFACLL,EAAAA,EAAAA,IAAA,+BACKC,EADL,iBACqBI,EADrB,kBACmCD,IAF9B,uBACpBhB,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,wDAOhBF,EAAgB,mCAAG,WAAOV,EAAS8B,GAAhB,yFACLN,EAAAA,EAAAA,IAAA,gBACVxB,GADU,OACA8B,EADA,oBACmBL,IAFd,uBACpBb,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,uD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Rewiew/Review.styled.jsx","components/Rewiew/Review.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 1;\n    background-color: #00000080;\n    transition: opacity 250ms, visibility 250ms;\n    z-index: 100;\n`;\n","import { ThreeCircles } from 'react-loader-spinner';\nimport { Backdrop } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <Backdrop>\n            <ThreeCircles\n                height=\"100\"\n                width=\"100\"\n                color=\"#369daf\"\n                wrapperStyle={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                }}\n                wrapperClass=\"\"\n                visible={true}\n                ariaLabel=\"three-circles-rotating\"\n                outerCircleColor=\"\"\n                innerCircleColor=\"\"\n                middleCircleColor=\"\"\n            />\n        </Backdrop>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewTitle = styled.h2`\n    color: ${({ theme }) => theme.colors.white};\n    margin-bottom: 20px;\n`;\n\nexport const ReviewList = styled.ul`\n    padding: 20px;\n    background-color: ${({ theme }) => theme.colors.accent};\n`;\n\nexport const RevievItem = styled.li`\n    color: ${({ theme }) => theme.colors.white};\n    &:not(:last-child) {\n        margin-bottom: 20px;\n    }\n`;\n\nexport const RevieAutor = styled.h2`\n    margin-bottom: 20px;\n`;\n\nexport const RevieText = styled.p``;\n","import { Loader } from 'components/Loader/Loader';\nimport {\n    RevieAutor,\n    RevieText,\n    RevievItem,\n    ReviewList,\n    ReviewTitle,\n} from './Review.styled';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { gethMovieDetails } from 'services/api';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport const Review = () => {\n    const { movieId } = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState([]);\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) return;\n        setIsLoading(true);\n        gethMovieDetails(movieId, '/reviews')\n            .then(data => {\n                setReviews(data.results);\n            })\n            .catch(err => {\n                setError(err.message);\n                toast(err.message);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [movieId]);\n\n    return (\n        <>\n            {isLoading && <Loader />}\n            {reviews.length > 0 && (\n                <>\n                    <ReviewTitle>Reviews</ReviewTitle>\n                    <ReviewList>\n                        {reviews?.map(({ id, author, content }) => (\n                            <RevievItem key={id}>\n                                <RevieAutor>Author: {author}</RevieAutor>\n                                <RevieText>{content}</RevieText>\n                            </RevievItem>\n                        ))}\n                    </ReviewList>\n                </>\n            )}\n            {reviews.length < 1 && (\n                <ReviewTitle>Sorry, this movie has no reviews.</ReviewTitle>\n            )}\n            {error && <ToastContainer />}\n        </>\n    );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '49f12b338a85dcd14c7e661f8eadc77e';\n\nexport const gethMovies = async () => {\n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return data;\n};\n\nexport const gethMoviesByName = async (q, page) => {\n    const { data } = await axios.get(\n        `search/movie?api_key=${API_KEY}&page=${page}&query=${q}`\n    );\n    return data;\n};\n\nexport const gethMovieDetails = async (movieId, details) => {\n    const { data } = await axios.get(\n        `movie/${movieId}${details}?api_key=${API_KEY}`\n    );\n    return data;\n};\n"],"names":["Backdrop","styled","Loader","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","ReviewTitle","theme","colors","white","ReviewList","accent","RevievItem","RevieAutor","RevieText","Review","movieId","useParams","useState","isLoading","setIsLoading","error","setError","reviews","setReviews","useEffect","gethMovieDetails","then","data","results","catch","err","message","toast","finally","length","map","id","author","content","axios","API_KEY","gethMovies","gethMoviesByName","q","page","details"],"sourceRoot":""}